{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rehman\\\\Desktop\\\\book-review-app\\\\client\\\\src\\\\Toast.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useCallback, useContext, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToastContext = /*#__PURE__*/createContext({\n  notify: () => {}\n});\nexport function ToastProvider({\n  children\n}) {\n  _s();\n  const [toasts, setToasts] = useState([]);\n  const remove = useCallback(id => {\n    setToasts(prev => prev.filter(t => t.id !== id));\n  }, []);\n  const notify = useCallback((message, options = {}) => {\n    var _options$duration;\n    const id = Math.random().toString(36).slice(2);\n    const toast = {\n      id,\n      message,\n      type: options.type || \"info\",\n      // info | success | error | warning\n      duration: (_options$duration = options.duration) !== null && _options$duration !== void 0 ? _options$duration : 3000\n    };\n    setToasts(prev => [...prev, toast]);\n    if (toast.duration > 0) {\n      setTimeout(() => remove(id), toast.duration);\n    }\n  }, [remove]);\n  const value = useMemo(() => ({\n    notify\n  }), [notify]);\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: value,\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-stack\",\n      children: toasts.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast toast-${t.type}`,\n        onClick: () => remove(t.id),\n        children: t.message\n      }, t.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ToastProvider, \"QfVgLe3UOKRTWCHnJ1k4trE6b0U=\");\n_c = ToastProvider;\nexport function useToast() {\n  _s2();\n  return useContext(ToastContext);\n}\n_s2(useToast, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ToastProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useMemo","useState","jsxDEV","_jsxDEV","ToastContext","notify","ToastProvider","children","_s","toasts","setToasts","remove","id","prev","filter","t","message","options","_options$duration","Math","random","toString","slice","toast","type","duration","setTimeout","value","Provider","className","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","useToast","_s2","$RefreshReg$"],"sources":["C:/Users/Rehman/Desktop/book-review-app/client/src/Toast.js"],"sourcesContent":["import React, { createContext, useCallback, useContext, useMemo, useState } from \"react\";\r\n\r\nconst ToastContext = createContext({ notify: () => {} });\r\n\r\nexport function ToastProvider({ children }) {\r\n  const [toasts, setToasts] = useState([]);\r\n\r\n  const remove = useCallback((id) => {\r\n    setToasts((prev) => prev.filter((t) => t.id !== id));\r\n  }, []);\r\n\r\n  const notify = useCallback((message, options = {}) => {\r\n    const id = Math.random().toString(36).slice(2);\r\n    const toast = {\r\n      id,\r\n      message,\r\n      type: options.type || \"info\", // info | success | error | warning\r\n      duration: options.duration ?? 3000,\r\n    };\r\n    setToasts((prev) => [...prev, toast]);\r\n    if (toast.duration > 0) {\r\n      setTimeout(() => remove(id), toast.duration);\r\n    }\r\n  }, [remove]);\r\n\r\n  const value = useMemo(() => ({ notify }), [notify]);\r\n\r\n  return (\r\n    <ToastContext.Provider value={value}>\r\n      {children}\r\n      <div className=\"toast-stack\">\r\n        {toasts.map((t) => (\r\n          <div key={t.id} className={`toast toast-${t.type}`} onClick={() => remove(t.id)}>\r\n            {t.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useToast() {\r\n  return useContext(ToastContext);\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzF,MAAMC,YAAY,gBAAGP,aAAa,CAAC;EAAEQ,MAAM,EAAEA,CAAA,KAAM,CAAC;AAAE,CAAC,CAAC;AAExD,OAAO,SAASC,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,MAAM,GAAGb,WAAW,CAAEc,EAAE,IAAK;IACjCF,SAAS,CAAEG,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMP,MAAM,GAAGP,WAAW,CAAC,CAACkB,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IAAA,IAAAC,iBAAA;IACpD,MAAMN,EAAE,GAAGO,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9C,MAAMC,KAAK,GAAG;MACZX,EAAE;MACFI,OAAO;MACPQ,IAAI,EAAEP,OAAO,CAACO,IAAI,IAAI,MAAM;MAAE;MAC9BC,QAAQ,GAAAP,iBAAA,GAAED,OAAO,CAACQ,QAAQ,cAAAP,iBAAA,cAAAA,iBAAA,GAAI;IAChC,CAAC;IACDR,SAAS,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEU,KAAK,CAAC,CAAC;IACrC,IAAIA,KAAK,CAACE,QAAQ,GAAG,CAAC,EAAE;MACtBC,UAAU,CAAC,MAAMf,MAAM,CAACC,EAAE,CAAC,EAAEW,KAAK,CAACE,QAAQ,CAAC;IAC9C;EACF,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,MAAMgB,KAAK,GAAG3B,OAAO,CAAC,OAAO;IAAEK;EAAO,CAAC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEnD,oBACEF,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,GACjCA,QAAQ,eACTJ,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAAtB,QAAA,EACzBE,MAAM,CAACqB,GAAG,CAAEf,CAAC,iBACZZ,OAAA;QAAgB0B,SAAS,EAAE,eAAed,CAAC,CAACS,IAAI,EAAG;QAACO,OAAO,EAAEA,CAAA,KAAMpB,MAAM,CAACI,CAAC,CAACH,EAAE,CAAE;QAAAL,QAAA,EAC7EQ,CAAC,CAACC;MAAO,GADFD,CAAC,CAACH,EAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE5B;AAAC3B,EAAA,CAnCeF,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAqC7B,OAAO,SAAS+B,QAAQA,CAAA,EAAG;EAAAC,GAAA;EACzB,OAAOvC,UAAU,CAACK,YAAY,CAAC;AACjC;AAACkC,GAAA,CAFeD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}